$query = MaterialRequest::where('company_id', $authCompany->company_id)
    ->whereHas('PrMemberManagment', function ($query) use ($isAllActive) {
       $query->every(fn($item) => $item->is_active == 1);
    })
    ->whereNotNull('request_id');

// Additional filters for POST method
if ($request->isMethod('post')) {
    $date15DaysAgo = now()->subDays(15);

    if ($projectId) {
        $query->where('projects_id', $projectId);
    }

    if ($subprojectId) {
        $query->orWhere('sub_projects_id', $subprojectId);
    }
}

// Retrieve the data
$datas = $query->orderBy('id', 'desc')->get();



$testttt = PrMemberManagment::where('material_request_id', 69)->get();
        // $sdfg = '';
        // foreach ($testttt as $rr) {
        //     if ($rr->is_active == 1) {
        //         $sdfg = true;
        //     } else {
        //         $sdfg = false;
        //         break;
        //     }
        // }

        // dd($sdfg, $testttt);



        $query = MaterialRequest::where('company_id', $authCompany->company_id)
            ->whereHas('PrMemberManagment', function ($query) { // Updated relationship name
                // $query->where('is_active', 1);
                $sdfg = '';
                foreach ($testttt as $rr) {
                    if ($rr->is_active == 1) {
                        $sdfg = true;
                    } else {
                        $sdfg = false;
                        break;
                    }
                }
            })
            ->whereNotNull('request_id');

        if ($request->isMethod('post')) {
            $date15DaysAgo = now()->subDays(15);
            if ($projectId) {
                $query->where('projects_id', $projectId);
            }
            if ($subprojectId) {
                $query->orWhere('sub_projects_id', $subprojectId);
            }
        }

        // Retrieve the data
        $datas = $query->orderBy('id', 'desc')->get();
