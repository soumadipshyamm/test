use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;
use Maatwebsite\Excel\Concerns\ShouldAutoSize;
use Maatwebsite\Excel\Concerns\WithColumnFormatting;
use Maatwebsite\Excel\Concerns\WithEvents;
use Maatwebsite\Excel\Concerns\WithMapping;
use Maatwebsite\Excel\Concerns\WithCustomStartCell;
use PhpOffice\PhpSpreadsheet\Worksheet\Worksheet;
use PhpOffice\PhpSpreadsheet\Cell\DataValidation;
use Illuminate\Support\Facades\Auth;

class ExportVendor implements FromCollection, WithHeadings, ShouldAutoSize, WithEvents, WithMapping
{
    public function collection()
    {
        $authCompany = Auth::guard('company')->user()->id;
        $companyId = searchCompanyId($authCompany);

        $vendor = Vendor::where('company_id', $companyId)->get();

        return $vendor;
    }

    public function headings(): array
    {
        return [
            'SlNo',
            'Uuid', // This will be hidden
            'Name',
            'Type',
            'Gst No',
            'Address',
            'Contact Person Name',
            'Contact Person Phone',
            'Contact Person Email',
        ];
    }

    public function map($vendor): array
    {
        static $slNo = 1; // Serial number counter
        return [
            $slNo++, // Column A: SlNo
            $vendor->uuid, // Column B: Uuid (hidden later)
            $vendor->name, // Column C: Name
            $vendor->type, // Column D: Type
            $vendor->gst_no, // Column E: Gst No
            $vendor->address, // Column F: Address
            $vendor->contact_person_name, // Column G: Contact Person Name
            $vendor->contact_person_phone, // Column H: Contact Person Phone
            $vendor->contact_person_email, // Column I: Contact Person Email
        ];
    }

    public function registerEvents(): array
    {
        return [
            AfterSheet::class => function (AfterSheet $event) {
                $sheet = $event->sheet->getDelegate();

                // Hide Column B (Uuid)
                $sheet->getColumnDimension('B')->setVisible(false);

                // Add dropdown for Column D (Type)
                $validation = $sheet->getCell('D2')->getDataValidation();
                $validation->setType(DataValidation::TYPE_LIST);
                $validation->setErrorStyle(DataValidation::STYLE_STOP);
                $validation->setAllowBlank(true);
                $validation->setShowInputMessage(true);
                $validation->setShowErrorMessage(true);
                $validation->setFormula1('"supplier,contractor,both"');

                // Apply dropdown to the entire column D (rows 2 to 1000 for example)
                foreach (range(2, 1000) as $row) {
                    $sheet->getCell("D{$row}")->setDataValidation(clone $validation);
                }

                // Freeze the first row (header)
                $sheet->freezePane('A2');

                // Make header row bold
                $sheet->getStyle('A1:I1')->getFont()->setBold(true);
            },
        ];
    }
}






class ExportVendor  implements FromCollection, WithHeadings, ShouldAutoSize
{

    public function collection()
    {
        $authCompany = Auth::guard('company')->user()->id;
        $companyId = searchCompanyId($authCompany);

        $vendor = Vendor::where('company_id',$companyId)->get();
        $collection = VendorResource::collection($vendor);
        return collect($collection);
    }

    public function headings(): array
    {
        return [
            '#',
            'Uuid',
            'Name',
            'Type',
            'Gst No',
            'Address',
            'Contact Person Name',
            'Contact Person Phone',
            'Contact Person Email',
        ];
    }

    public function styles(Worksheet $sheet)
    {
        return [
            1 => ['font' => ['bold' => true], 'freeze' => true],
        ];
    }
}
