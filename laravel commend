class BackupAndMigrate extends Command
{
    protected $signature = 'migrate';
    protected $description = 'Backup SQLite database, create a new one, and run migrations';

    public function handle()
    {
        // Step 1: Create a SQLite database
        $databasePath = database_path('database.sqlite');
        if (file_exists($databasePath)) {
            touch($databasePath);
            $this->info('SQLite database created.');
        }

        // Step 2: Backup existing data
        $backupPath = storage_path('backups');
        if (!is_dir($backupPath)) {
            mkdir($backupPath, 0755, true);
        }

        $backupFile = $backupPath . '/backup_' . date('Y_m_d_H_i_s') . '.sql';
        $tables = DB::select('SHOW TABLES');

        foreach ($tables as $table) {
            $tableName = $table->{"Tables_in_" . env('DB_DATABASE')}; // Adjust as per your DB setup
            $data = DB::table($tableName)->get();
            $sql = "INSERT INTO $tableName VALUES ";
            foreach ($data as $row) {
                $sql .= "(" . implode(',', array_map(fn($value) => "'" . addslashes($value) . "'", (array)$row)) . "),";
            }
            $sql = rtrim($sql, ',') . ";";
            file_put_contents($backupFile, $sql, FILE_APPEND);
        }
        $this->info('Backup created at: ' . $backupFile);
        // Step 3: Run migrations
        $this->call('migrate');
        $this->info('Migrations executed successfully.');
    }
}
