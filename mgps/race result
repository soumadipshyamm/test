
import { Request, Response } from 'express';
import { StatusCodes } from 'http-status-codes';
import RaceResultModel from './models/RaceResultModel'; // Adjust the import based on your project structure
import MESSAGE from './messages'; // Adjust the import based on your project structure

export const getRaceResultsByDogId = async (req: Request, res: Response): Promise<any> => {
    const { dog_id } = req.params; // Assuming dog_id is passed as a URL parameter

    try {
        // Query the race results for the specified dog ID
        const raceResults = await RaceResultModel.find({
            'round.winners.dog_object_id': dog_id
        });

        if (raceResults.length === 0) {
            return res.status(StatusCodes.NOT_FOUND).json({
                message: MESSAGE.custom("No race results found for the specified dog ID."),
            });
        }

        // Filter and format the results to include only relevant information
        const filteredResults = raceResults.map(result => ({
            race_object_id: result.race_object_id,
            race_date: result.race_date,
            grade: result.grade,
            rounds: result.round.map(round => ({
                race_round_no: round.race_round_no,
                time: round.time,
                winners: round.winners.filter(winner => winner.dog_object_id === dog_id)
            })).filter(round => round.winners.length > 0) // Only include rounds with the specified dog
        }));

        return res.status(StatusCodes.OK).json({
            message: MESSAGE.get.succ,
            results: filteredResults,
        });
    } catch (error) {
        return res.status(StatusCodes.INTERNAL_SERVER_ERROR).json({
            message: MESSAGE.custom("An error occurred while fetching race results."),
            error,
        });
    }
};













{
            "_id": "683026a8941bbcefea1154bc",
            "race_object_id": "68271a78b40d526bbfe7cb75",
            "race_date": "Sat May 24 2025 05:30:00 GMT+0530 (India Standard Time)",
            "grade": "A",
            "round": [
                {
                    "race_round_no": 1,
                    "time": "12:02:02",
                    "winners": [
                        {
                            "position": 1,
                            "dog_object_id": "680a320033c73e16facd9966",
                            "race_completion_time": "12:02:02",
                            "mgn": 12,
                            "split": 12,
                            "in_run": 12,
                            "weight": 12,
                            "dog_price": "12.11",
                            "_id": "683026a8941bbcefea1154be"
                        },
                        {
                            "position": 2,
                            "dog_object_id": "680a320033c73e16facd9966",
                            "race_completion_time": "12:02:02",
                            "mgn": 12,
                            "split": 12,
                            "in_run": 12,
                            "weight": 12,
                            "dog_price": "12.11",
                            "_id": "683026a8941bbcefea1154bf"
                        }
                    ],
                    "_id": "683026a8941bbcefea1154bd"
                },
                {
                    "race_round_no": 2,
                    "time": "12:02:02",
                    "winners": [
                        {
                            "position": 1,
                            "dog_object_id": "680a320033c73e16facd9966",
                            "race_completion_time": "12:02:02",
                            "mgn": 12,
                            "split": 12,
                            "in_run": 12,
                            "weight": 12,
                            "dog_price": "12.11",
                            "_id": "683026a8941bbcefea1154c1"
                        },
                        {
                            "position": 2,
                            "dog_object_id": "680a320033c73e16facd9966",
                            "race_completion_time": "12:02:02",
                            "mgn": 12,
                            "split": 12,
                            "in_run": 12,
                            "weight": 12,
                            "dog_price": "12.11",
                            "_id": "683026a8941bbcefea1154c2"
                        }
                    ],
                    "_id": "683026a8941bbcefea1154c0"
                }
            ],
            "createdAt": "2025-05-23T07:41:28.792Z",
            "updatedAt": "2025-05-23T07:41:28.792Z",
            "__v": 0
        },
        {
            "_id": "683026ad941bbcefea1154c5",
            "race_object_id": "68271a78b40d526bbfe7cb75",
            "race_date": "Sat May 24 2025 05:30:00 GMT+0530 (India Standard Time)",
            "grade": "A",
            "round": [
                {
                    "race_round_no": 1,
                    "time": "12:02:02",
                    "winners": [
                        {
                            "position": 1,
                            "dog_object_id": "680a320033c73e16facd9966",
                            "race_completion_time": "12:02:02",
                            "mgn": 12,
                            "split": 12,
                            "in_run": 12,
                            "weight": 12,
                            "dog_price": "12.11",
                            "_id": "683026ad941bbcefea1154c7"
                        },
                        {
                            "position": 2,
                            "dog_object_id": "680a320033c73e16facd9966",
                            "race_completion_time": "12:02:02",
                            "mgn": 12,
                            "split": 12,
                            "in_run": 12,
                            "weight": 12,
                            "dog_price": "12.11",
                            "_id": "683026ad941bbcefea1154c8"
                        }
                    ],
                    "_id": "683026ad941bbcefea1154c6"
                },
                {
                    "race_round_no": 2,
                    "time": "12:02:02",
                    "winners": [
                        {
                            "position": 1,
                            "dog_object_id": "680a320033c73e16facd9966",
                            "race_completion_time": "12:02:02",
                            "mgn": 12,
                            "split": 12,
                            "in_run": 12,
                            "weight": 12,
                            "dog_price": "12.11",
                            "_id": "683026ad941bbcefea1154ca"
                        },
                        {
                            "position": 2,
                            "dog_object_id": "680a320033c73e16facd9966",
                            "race_completion_time": "12:02:02",
                            "mgn": 12,
                            "split": 12,
                            "in_run": 12,
                            "weight": 12,
                            "dog_price": "12.11",
                            "_id": "683026ad941bbcefea1154cb"
                        }
                    ],
                    "_id": "683026ad941bbcefea1154c9"
                }
            ],
            "createdAt": "2025-05-23T07:41:33.289Z",
            "updatedAt": "2025-05-23T07:41:33.289Z",
            "__v": 0
        }
filtter dog id wise reace result filter and data show

export const createRaceResult = async (req: Request, res: Response): Promise<any> => {

	const {
		race_object_id,
		race_round_no,
		race_date,
		grade,
		round
	} = req.body;

	const raceResultInstances = {
		race_object_id,
		race_date: new Date(race_date), // Convert to Date
		grade,
		round: round.map((r: any) => ({
			race_round_no: r.race_round_no, // Convert to number
			time: r.time, // Convert to Date
			winners: r.winners.map((wr: any) => ({ // Wrap winners in an array
				position: wr.position, // Convert to number
				dog_object_id: wr.dog_object_id,
				race_completion_time: wr.race_completion_time, // Convert to Date
				box_number: wr.box_number,
				mgn: wr.mgn, // Convert to number
				split: wr.split, // Convert to number
				in_run: wr.in_run, // Convert to number
				weight: wr.weight, // Convert to number
				dog_price: wr.dog_price // Convert to number
			}))
		}))
	};

	try {
		const raceResultCreate = await RaceResultModel.create(raceResultInstances);
		return res.status(StatusCodes.CREATED).json({
			message: MESSAGE.post.succ,
			result: raceResultCreate,
		});
	} catch (error) {
		return res.status(StatusCodes.BAD_REQUEST).json({
			message: MESSAGE.custom("Race fetch unsuccessful!"),
			error,
		});
	}
};
