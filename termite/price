 "servicePlans" => array:3 [
    "drywood_subterranean" => array:5 [
      "servicePlanCheckbox" => "drywood_subterranean"
      "initial_price" => "272"
      "reoccurring" => "Ab magna dolor culpa"
      "renewal" => "month"
      "status" => "1"
    ]
    "drywood" => array:4 [
      "initial_price" => "875"
      "reoccurring" => "Cillum vitae lorem r"
      "renewal" => "year"
      "status" => "1"
    ]
    "subterranean" => array:4 [
      "servicePlanCheckbox" => "subterranean"
      "initial_price" => "195"
      "reoccurring" => "Voluptate aut provid"
      "renewal" => "month"
    ]
  ]insert this table Schema::create('service_plans', function (Blueprint $table) {
            $table->id();
            $table->uuid('uuid')->unique()->nullable();;
            $table->string('type');
            $table->string('name')->nullable();
            $table->decimal('initial_price', 10, 2)->nullable();
            $table->decimal('reoccurring_price', 10, 2)->nullable();
            $table->enum('renewal', ['month', 'year'])->nullable();
            $table->boolean('is_enabled')->default(false);
            $table->foreignId('user_id')->nullable()->references('id')->on('users')->constrained()->cascadeOnDelete()->Comments('User table foreign key');
            $table->timestamps();
        });





 "standalone_options" => array:9 [
    "fumigation" => array:1 [
      "initialPrice" => "388"
    ]
    "preventive" => array:2 [
      "type" => "preventive"
      "initialPrice" => "308"
    ]
    "one_time_local" => array:2 [
      "type" => "one_time_local"
      "initialPrice" => "746"
    ]
    "wood_repairs" => array:1 [
      "initialPrice" => "415"
    ]
    "tile_warranty" => array:3 [
      "type" => "tile_warranty"
      "initialPrice" => "380"
      "duration" => null
    ]
    "insulation" => array:3 [
      "type" => "insulation"
      "initialPrice" => "265"
      "status" => "1"
    ]
    "inspection_fee" => array:3 [
      "type" => "inspection_fee"
      "initialPrice" => "428"
      "status" => "1"
    ]
    "other" => array:2 [
      "initialPrice" => "778"
      "description" => "Cupidatat duis alias"
    ]
    "discounts" => array:2 [
      "type" => "discounts"
      "initialPrice" => "651"
    ]
  ]

 Schema::create('standalone_options', function (Blueprint $table) {
            $table->id();
            $table->uuid('uuidd')->unique()->nullable();
            $table->string('type');
            $table->string('name')->nullable();
            $table->decimal('initial_price', 10, 2)->nullable();
            $table->string('initial_other_option')->nullable();
            $table->boolean('is_enabled')->default(false);
            $table->foreignId('service_plan_id')->constrained()->onDelete('cascade');
            $table->foreignId('user_id')->nullable()->references('id')->on('users')->constrained()->cascadeOnDelete()->Comments('User table foreign key');
            $table->timestamps();
        });





  "services_other_option" => array:6 [
    "option" => null
    "other" => null
    "office" => null
    "documents" => null
    "email_wdo_report" => "1"
    "email_pricing" => "1"
  ]

Schema::create('service_other_options', function (Blueprint $table) {
            $table->id();
            $table->uuid('uuid')->unique()->nullable();;
            $table->string('option')->nullable();; // Name of the option
            $table->string('other')->nullable(); // Office selection
            $table->string('office')->nullable(); // Office selection

            $table->boolean('documents')->nullable(); // Email WDO report
            $table->boolean('email_wdo_report')->default(false); // Email WDO report
            $table->boolean('email_pricing')->default(false); // Email pricing
            $table->boolean('escrow_inspection')->default(false); // Escrow inspection
            $table->foreignId('service_plan_id')->constrained()->onDelete('cascade');
            $table->foreignId('user_id')->nullable()->references('id')->on('users')->constrained()->cascadeOnDelete()->Comments('User table foreign key');
            $table->timestamps();
        });
