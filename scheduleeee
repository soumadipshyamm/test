


*********************************************
aaaaaas

.fc-event {
    background-color: #f0f8ff; /* Light background for events */
    border: 1px solid #ccc;
    color: #333;
    padding: 5px;
}

.fc-day:hover {
    background-color: #e8f0fe; /* Highlight day on hover */
}

.fc-title {
    font-weight: bold;
}

.view-details {
    color: #007bff;
    text-decoration: underline;
    cursor: pointer;
}

.fc-day-number {
    font-weight: bold;
    margin-bottom: 5px;
}

$(document).ready(function () {
    call_calendar();
});

function call_calendar() {
    var calendar = $('#full_calendar').fullCalendar({
        defaultView: 'month',
        editable: true,
        header: {
            left: 'prev,next today',
            center: 'title',
            right: 'month,agendaWeek,agendaDay'
        },
        events: [
            @foreach ($inspections as $inspection)
                {
                    title: 'Inspection ({{ $inspection->count }})', // Display the inspection count in the event title
                    start: '{{ $inspection->date }}',
                    allDay: true, // Ensure the event is shown as an all-day event
                    description: `<a href="javascript:void(0)" class="view-details" data-date="{{ $inspection->date }}">View Details</a>`, // Add the View Details link
                },
            @endforeach
        ],
        
        eventRender: function (event, element) {
            // Customize the appearance of the event
            element.find('.fc-title').append('<br>' + event.description); // Add the View Details link below the title
        },

        dayClick: function (date, jsEvent, view) {
            // Redirect to the detailed inspection list for the clicked date
            var formattedDate = date.format(); // Format the clicked date
            var url = "{{ route('schedule.appointment.list', ':date') }}"; // Define the dynamic route for the date
            url = url.replace(':date', formattedDate); // Replace placeholder with the actual date
            window.location.href = url; // Redirect to the constructed URL
        }
    });

    // Handle the "View Details" click separately
    $(document).on('click', '.view-details', function () {
        var date = $(this).data('date');
        var url = "{{ route('schedule.appointment.details', ':date') }}"; // Define the detailed view route
        url = url.replace(':date', date); // Replace the placeholder with the date
        window.location.href = url; // Redirect to the constructed URL
    });
}


******************************************************************8

 <div class="scheduled-list appoinementDetails" data-uuid="{{ $apmtdata->uuid }}">
                                    <div class="time-box sc-box">
                                        <i>Time</i>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <p>{{ \Carbon\Carbon::parse($apmtdata?->insp_start_datetime)->format('h:i A') .
                                                '-' .
                                                \Carbon\Carbon::parse($apmtdata?->insp_end_datetime)->format('h:i A') ??
                                                '---' }}
                                            </p>
                                            <img src="assets/images/angle-right.png" alt="">
                                        </div>
                                    </div>
                                    <div class="name-box sc-box">
                                        <div class="time-info">
                                            <i>Customer Name</i>
                                            <p> {{ $apmtdata?->customers?->name ?? '---' }}</p>
                                        </div>
                                        <div class="time-status">
                                            @php
                                                $currentDateTime = \Carbon\Carbon::now();
                                                $startDateTime = \Carbon\Carbon::parse($apmtdata?->insp_start_datetime);
                                                $endDateTime = \Carbon\Carbon::parse($apmtdata?->insp_end_datetime);
                                                $isOngoing = $currentDateTime->between($startDateTime, $endDateTime);
                                            @endphp
                                            @if ($status == 0)
                                                @if ($isOngoing)
                                                    <span class="scd-chip chip-Ongoing">Ongoing Process</span>
                                                @endif
                                            @else
                                                <span class="scd-chip {{ $color }}">{{ $status }}</span>
                                            @endif
                                        </div>
                                    </div>
                                    <div class="type-box sc-box">
                                        <i>Inspection Type</i>
                                        <p>{{ $apmtdata?->inspectionType?->name ?? '---' }}</p>
                                    </div>
                                </div>

***************************************************************************************************************8
#######################################################################################
<div class="row">
    <!-- Address Card -->
    <div class="col-lg-6 col-md-12">
        <div class="address-card">
            <h3>Address</h3>
            <div class="row gy-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="building_number">Building No.</label>
                        <input type="text" class="form-control" id="building_number" name="building_number"
                            value="{{ $datas->profile->building_number ?? '' }}" 
                            {{ isset($datas->profile->building_number) ? 'readonly' : '' }}>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="office">Office</label>
                        <select id="office" name="office" class="form-control"
                            {{ isset($datas->profile->office) ? 'readonly' : '' }}>
                            <option value="">--- Select Office ---</option>
                            {{ getOfficeList(isset($datas->profile->office) ?? '') }}
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="unit_number">Unit Number</label>
                        <input type="text" class="form-control" id="unit_number" name="unit_number"
                            value="{{ $datas->profile->unit_number ?? '' }}"
                            {{ isset($datas->profile->unit_number) ? 'readonly' : '' }}>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="country">Country</label>
                        <select id="country" name="country" class="form-control"
                            {{ isset($datas->profile->country_id) ? 'readonly' : '' }}>
                            <option value="">--- Select Country ---</option>
                            {{ getCountry('') }}
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="street">Street</label>
                        <input type="text" class="form-control" id="street" name="street"
                            value="{{ $datas->profile->street ?? '' }}"
                            {{ isset($datas->profile->street) ? 'readonly' : '' }}>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="state">State</label>
                        <select id="state" name="state" class="form-control"
                            {{ isset($datas->profile->state_id) ? 'readonly' : '' }}>
                            <option value="">--- Select State ---</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="zip_code">Zip Code</label>
                        <input type="text" class="form-control" id="zip_code" name="zip_code"
                            value="{{ $datas->profile->zip_code ?? '' }}"
                            {{ isset($datas->profile->zip_code) ? 'readonly' : '' }}>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="city">City</label>
                        <select id="city" name="city" class="form-control"
                            {{ isset($datas?->billingDitails?->city_id) ? 'readonly' : '' }}>
                            <option value="">--- Select City ---</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="ac_no">Account No.</label>
                        <input type="text" class="form-control" id="ac_no" name="ac_no"
                            value="{{ $datas->profile->ac_no ?? '' }}"
                            {{ isset($datas->profile->ac_no) ? 'readonly' : '' }}>
                    </div>
                </div>
                <div class="col-12">
                    <div class="form-group">
                        <label for="address">Address</label>
                        <textarea id="address" name="address" class="form-control" rows="2"
                            {{ isset($datas?->profile?->address) ? 'readonly' : '' }}>{{ $datas?->profile?->address ?? '' }}</textarea>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Billing Address Card -->
    <div class="col-lg-6 col-md-12">
        <div class="address-card">
            <h3>Billing Address</h3>
            <a href="#" id="editBillingAddress"><i class="fas fa-edit editBillingAddress"></i></a>
            <div class="row gy-3">
                <!-- Repeat similar fields as the Address Card -->
            </div>
        </div>
    </div>
</div>

.address-card {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
    background-color: #fff;
    margin-bottom: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.address-card h3 {
    font-size: 18px;
    font-weight: bold;
    color: #333;
    margin-bottom: 15px;
}

.form-group label {
    font-weight: 500;
    color: #555;
    font-size: 14px;
    margin-bottom: 5px;
    display: block;
}

.form-control {
    border: 1px solid #ddd;
    border-radius: 4px;
    height: 38px;
    font-size: 14px;
    color: #333;
    padding: 5px 10px;
}

textarea.form-control {
    resize: none;
    height: 70px;
}

#editBillingAddress {
    float: right;
    font-size: 16px;
    color: #63E6BE;
    text-decoration: none;
}

#editBillingAddress:hover {
    color: #28a745;
}

#######################################################################################

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
<div class="accordion" id="appointmentAccordion">
    <div class="accordion-item">
        <h2 class="accordion-header" id="heading{{ $apmtdata->uuid }}">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse{{ $apmtdata->uuid }}" aria-expanded="false" aria-controls="collapse{{ $apmtdata->uuid }}">
                <div class="d-flex justify-content-between align-items-center w-100">
                    <span>Appointment: {{ $apmtdata?->customers?->name ?? '---' }}</span>
                    <span>{{ \Carbon\Carbon::parse($apmtdata?->insp_start_datetime)->format('h:i A') }} - {{ \Carbon\Carbon::parse($apmtdata?->insp_end_datetime)->format('h:i A') }}</span>
                </div>
            </button>
        </h2>
        <div id="collapse{{ $apmtdata->uuid }}" class="accordion-collapse collapse" aria-labelledby="heading{{ $apmtdata->uuid }}" data-bs-parent="#appointmentAccordion">
            <div class="accordion-body">
                <div class="scheduled-list appoinementDetails" data-uuid="{{ $apmtdata->uuid }}">
                    <div class="time-box sc-box">
                        <i>Time</i>
                        <div class="d-flex justify-content-between align-items-center">
                            <p>{{ \Carbon\Carbon::parse($apmtdata?->insp_start_datetime)->format('h:i A') . '-' . \Carbon\Carbon::parse($apmtdata?->insp_end_datetime)->format('h:i A') ?? '---' }}</p>
                            <img src="assets/images/angle-right.png" alt="">
                        </div>
                    </div>
                    <div class="name-box sc-box">
                        <div class="time-info">
                            <i>Customer Name</i>
                            <p>{{ $apmtdata?->customers?->name ?? '---' }}</p>
                        </div>
                        <div class="time-status">
                            @php
                                $currentDateTime = \Carbon\Carbon::now();
                                $startDateTime = \Carbon\Carbon::parse($apmtdata?->insp_start_datetime);
                                $endDateTime = \Carbon\Carbon::parse($apmtdata?->insp_end_datetime);
                                $isOngoing = $currentDateTime->between($startDateTime, $endDateTime);
                            @endphp
                            @if ($status == 0)
                                @if ($isOngoing)
                                    <span class="scd-chip chip-Ongoing">Ongoing Process</span>
                                @endif
                            @else
                                <span class="scd-chip {{ $color }}">{{ $status }}</span>
                            @endif
                        </div>
                    </div>
                    <div class="type-box sc-box">
                        <i>Inspection Type</i>
                        <p>{{ $apmtdata?->inspectionType?->name ?? '---' }}</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


.accordion-button {
    font-size: 16px;
    font-weight: bold;
}

.accordion-body {
    background: #f9f9f9;
    border: 1px solid #ddd;
    padding: 10px;
}

.scd-chip {
    padding: 5px 10px;
    border-radius: 20px;
    font-size: 12px;
    color: white;
}

.chip-Ongoing {
    background-color: #007bff;
}

.chip-Completed {
    background-color: #28a745;
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
***************************************************************************************************************8
***************************************************************************************************************8
***************************************************************************************************************8

####################################
<div class="date-nav">
    <button class="ch-btn prev"><i class="fa-solid fa-chevron-left"></i></button>
    <input type="text" id="datePicker" class="form-control" 
           value="{{ \Carbon\Carbon::parse($date)->format('d M Y') }}">
    <button class="ch-btn next"><i class="fa-solid fa-chevron-right"></i></button>
</div>
<div id="dataDisplay">
    <!-- This section will display data fetched via AJAX -->
    Loading data...
</div>

$(document).ready(function () {
    // Initialize date picker
    $("#datePicker").datepicker({
        dateFormat: "dd M yy", // Format for the displayed date
        onSelect: function (dateText) {
            fetchData(dateText); // Fetch data when a date is selected
        }
    });

    // Function to fetch data for a specific date
    function fetchData(date) {
        $.ajax({
            url: '/ajax/get-data-by-date',
            type: 'GET',
            data: { date: date },
            success: function (response) {
                $('#dataDisplay').html(response); // Update data display
            },
            error: function (xhr) {
                console.error("Error fetching data:", xhr);
                $('#dataDisplay').html('<p class="text-danger">Failed to load data.</p>');
            }
        });
    }

    // Adjust date when buttons are clicked
    function adjustDate(days) {
        let currentDate = $("#datePicker").datepicker("getDate");
        currentDate.setDate(currentDate.getDate() + days);
        let formattedDate = $.datepicker.formatDate("dd M yy", currentDate);
        $("#datePicker").datepicker("setDate", formattedDate); // Update the picker
        fetchData(formattedDate); // Fetch data for the new date
    }

    // Previous date button
    $(".prev").on("click", function () {
        adjustDate(-1);
    });

    // Next date button
    $(".next").on("click", function () {
        adjustDate(1);
    });

    // Fetch initial data for the current date
    fetchData($("#datePicker").val());
});


public function getDataByDate(Request $request)
{
    $date = \Carbon\Carbon::createFromFormat('d M Y', $request->input('date'))->toDateString();
    $data = MyModel::whereDate('created_at', $date)->get();

    return view('partials.data-display', compact('data'))->render();
}


@if($data->isEmpty())
    <p>No data available for the selected date.</p>
@else
    <ul>
        @foreach($data as $item)
            <li>{{ $item->name }} - {{ $item->created_at }}</li>
        @endforeach
    </ul>
@endif

####################################
***************************************************************************************************************8

<div class="date-picker-wrapper">
    <button id="prevDate" class="btn btn-secondary">Previous</button>
    <input type="date" id="datePicker" class="form-control" value="{{ now()->format('Y-m-d') }}">
    <button id="nextDate" class="btn btn-secondary">Next</button>
</div>

$(document).ready(function () {
    const datePicker = $('#datePicker');

    // Function to fetch data for a specific date
    function fetchData(date) {
        $.ajax({
            url: '/ajax/get-data-by-date', // Laravel route for AJAX
            type: 'GET',
            data: { date: date },
            success: function (response) {
                // Update the data display section with the response
                $('#dataDisplay').html(response);
            },
            error: function (xhr) {
                console.error("Error fetching data:", xhr);
                $('#dataDisplay').html('<p class="text-danger">Failed to load data.</p>');
            }
        });
    }

    // Fetch initial data for the current date
    fetchData(datePicker.val());

    // Adjust date when buttons are clicked
    function adjustDate(days) {
        let currentDate = new Date(datePicker.val());
        currentDate.setDate(currentDate.getDate() + days);
        let newDate = currentDate.toISOString().split('T')[0];
        datePicker.val(newDate);
        fetchData(newDate); // Fetch data for the new date
    }

    // Previous date button click
    $('#prevDate').on('click', function () {
        adjustDate(-1);
    });

    // Next date button click
    $('#nextDate').on('click', function () {
        adjustDate(1);
    });

    // Fetch data when the date picker value changes
    datePicker.on('change', function () {
        fetchData($(this).val());
    });
});


public function getDataByDate(Request $request)
{
    $date = $request->input('date');
    // Fetch data based on the date (replace this with your actual data fetching logic)
    $data = MyModel::whereDate('created_at', $date)->get();

    // Return a view or JSON data
    return view('partials.data-display', compact('data'))->render();
}


@if($data->isEmpty())
    <p>No data available for the selected date.</p>
@else
    <ul>
        @foreach($data as $item)
            <li>{{ $item->name }} - {{ $item->created_at }}</li>
        @endforeach
    </ul>
@endif

***************************************************************************************************************8

###############################################################
$(document).ready(function () {
    call_calendar();
});

function call_calendar() {
    // Initialize FullCalendar
    var calendar = $('#full_calendar').fullCalendar({
        defaultView: 'month',
        editable: false, // Disable editing by default
        header: {
            left: 'prev,next today',
            center: 'title',
            right: 'month,agendaWeek,agendaDay',
        },
        events: [
            @foreach ($datas as $key => $event)
                {
                    title: 'Inspection {{ $key + 1 }}: {{ date('h:i A', strtotime($event['insp_start_datetime'])) }}', // Inspection title
                    start: '{{ date('Y-m-d\TH:i:s', strtotime($event['insp_start_datetime'])) }}', // Start time
                    description: '{{ $event["details"] ?? "No details available" }}', // Additional details
                },
            @endforeach
        ],
        eventRender: function (event, element) {
            // Add a tooltip with inspection details
            if (event.description) {
                element.attr('title', event.description);
            }
        },
        dayRender: function (date, cell) {
            // Calculate total inspections for each day
            const dayEvents = $('#full_calendar').fullCalendar('clientEvents', function (e) {
                return moment(e.start).isSame(date, 'day');
            });
            if (dayEvents.length > 0) {
                cell.append(`<div class="total-inspections">Total Inspections: ${dayEvents.length}</div>`);
            }
        },
        dayClick: function (date, jsEvent, view) {
            // Redirect to details page for the selected date
            var formattedDate = date.format('YYYY-MM-DD'); // Format date as required
            var url = "{{ route('schedule.appointment.list', ':date') }}"; // Placeholder route
            url = url.replace(':date', formattedDate); // Replace placeholder with the actual date
            window.location.href = url; // Redirect
        },
        eventClick: function (event) {
            // Redirect to event-specific details page
            var url = "{{ route('schedule.appointment.details', ':id') }}"; // Placeholder route
            url = url.replace(':id', event.id); // Replace with actual event ID (if available)
            window.location.href = url; // Redirect
        },
    });
}

222222###############################################################

$(document).ready(function () {
    call_calendar();
});

function call_calendar() {
    var calendar = $('#full_calendar').fullCalendar({
        defaultView: 'month',
        editable: true,
        header: {
            left: 'prev,next today',
            center: 'title',
            right: 'month,agendaWeek,agendaDay'
        },

        // Render events with total count
        events: [
            @foreach ($data as $event)
                {
                    title: 'Total Inspections: {{ $event['total'] }}', // Display total count
                    start: '{{ $event['date'] }}',
                },
            @endforeach
        ],

        // Day click action: Redirect to detailed list of inspections for that day
        dayClick: function (date, jsEvent, view) {
            var formattedDate = date.format(); // Format the date to a string (YYYY-MM-DD)
            var url = "{{ route('schedule.appointment.list', ':date') }}"; // Placeholder route
            url = url.replace(':date', formattedDate); // Replace placeholder with the actual date

            window.location.href = url; // Redirect to the constructed URL
        }
    });
}


###############################################################
QQQQQQQ <script>
            $(document).ready(function() {
                call_calendar();
            })

            function call_calendar() {
                var calendar = $('#full_calendar').fullCalendar({
                    defaultView: 'month',
                    editable: true,
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    events: [
                        @foreach ($datas as $key => $event)
                            {
                                title: '{{ date('h:i A', strtotime($event['insp_start_datetime'])) ?? 'Event ' . ($key + 1) }}', // Use a title from the event data or a default
                                start: '{{ date('Y-m-d', strtotime($event['insp_start_datetime'])) }}',
                                // start: '{{ \Carbon\Carbon::parse($event['insp_start_datetime'])->format('Y-m-d') }}',
                            },
                        @endforeach
                    ],

                    dayClick: function(date, jsEvent, view) {
                        var formattedDate = date.format(); // Format the date to a string
                        var url = "{{ route('schedule.appointment.list', ':date') }}"; // Use placeholder
                        url = url.replace(':date', formattedDate); // Replace placeholder with actual date
                        window.location.href = url; // Redirect to the constructed URL
                    }
                });
            }
        </script>
***************************************************************************************************************8
QQQQQQQQQ <div class="date-nav">
                    <button class="ch-btn prev"><i class="fa-solid fa-chevron-left"></i></button>
                    <span>{{ \Carbon\Carbon::parse($date)->format('d M Y') }}</span>
                    <button class="ch-btn next"><i class="fa-solid fa-chevron-right"></i></button>
                </div>
***************************************************************************************************************8

AAAAAAAAAAAAAAAAA

$(document).on("click", ".appoinementDetails", function(e) {
    e.preventDefault();
    let appoinementId = $(this).data('uuid');
    
    $.ajax({
        url: APP_URL + `/ajax/get-appoinement-details`,
        type: "GET",
        data: {
            uuid: appoinementId
        },
        success: function(response) {
            if (response) {
                const data = response.data;
                
                // Common elements to both conditions
                $('#listAppoinementDetailsModal').modal('show');
                $('#inspectionId').val(data.uuid);
                $('#inspectionType').val(data.inspection_type_id).change();
                $('#insp_customer_name').text(data.customers.name);
                $('#insp_customer_phone').text(data.customers.mobile_number);
                $('#insp_customer_time').text(
                    `${new Date(data.insp_start_datetime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true })} - ${new Date(data.insp_end_datetime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true })}`
                );
                $('#insp_customer_date').text(new Date(data.insp_start_datetime).toLocaleDateString());
                $('.referral_remove').attr('data-uuid', data.uuid);

                // Check for is_active status
                if (data.is_active !== 1 && data.is_active !== 4) {
                    // Inspection is not complete or rejected
                    $('.inspection-complete, .inspection-complete-checkbox, #referral-remove, .re-schedule, .cancel_inspection').show();
                    $('.appointment-status').removeClass().addClass('appointment-status chip-unknown').text('Unknown Status');
                } else {
                    // Handle status cases
                    let appointmentStatus = '';
                    let statusClass = '';
                    
                    switch (data.is_active) {
                        case 0:
                            appointmentStatus = 'Pending';
                            statusClass = 'chip-pending';
                            break;
                        case 1:
                            appointmentStatus = 'Complete';
                            statusClass = 'chip-completed';
                            break;
                        case 2:
                            appointmentStatus = 'Cancelled';
                            statusClass = 'chip-cancelled';
                            break;
                        case 3:
                            appointmentStatus = 'Rescheduled';
                            statusClass = 'chip-reschedule';
                            break;
                        case 4:
                            appointmentStatus = 'Rejected';
                            statusClass = 'chip-rejected';
                            break;
                        default:
                            appointmentStatus = 'Unknown Status';
                            statusClass = 'chip-unknown';
                    }

                    $('.appointment-status').removeClass().addClass(`appointment-status ${statusClass}`).text(appointmentStatus);
                    $('.inspection-complete, .inspection-complete-checkbox, #referral-remove, .re-schedule, .cancel_inspection').hide();
                }
            }
        },
        error: function(xhr) {
            console.error("Error fetching appointment details:", xhr);
        }
    });
});



*********************************************************************************************************

QQQQQQQQQQQQQQQQQQQQQQQQQQ

  $(document).on("click", ".appoinementDetails", function(e) {
            e.preventDefault();
            let appoinementId = $(this).data('uuid');
            // alert(appoinementId);
            $.ajax({
                url: APP_URL + `/ajax/get-appoinement-details`,
                type: "GET",
                data: {
                    uuid: appoinementId
                },
                success: function(response) {
                    console.log(response.data);
                    if (response) {
                        if (response.data.is_active !== 1 && response.data.is_active !== 4) {
                            //0:pending,1:complete,2:cancle,3:reschedule,4:reject
                            $('#listAppoinementDetailsModal').modal('show');
                            $('#inspectionId').val(response.data.uuid);
                            $('#inspectionType').val(response.data.inspection_type_id).change();
                            $('#insp_customer_name').text(response.data.customers.name);
                            $('#insp_customer_phone').text(response.data.customers.mobile_number);
                            $('#insp_customer_time').text(new Date(response.data.insp_start_datetime)
                                .toLocaleTimeString([], {
                                    hour: '2-digit',
                                    minute: '2-digit',
                                    hour12: true // Change to 24-hour format
                                }) + ' - ' + new Date(response.data.insp_end_datetime)
                                .toLocaleTimeString([], {
                                    hour: '2-digit',
                                    minute: '2-digit',
                                    hour12: true // Change to 24-hour format
                                }));
                            $('#insp_customer_date').text(new Date(response.data.insp_start_datetime)
                                .toLocaleDateString());
                            $('.referral_remove').attr('data-uuid', response.data
                                .uuid); // Ensure data-uuid is set
                            // $('.referral_remove').attr(response.data.customers.address);
                        } else {
                            $('#listAppoinementDetailsModal').modal('show');
                            $('#inspectionId').val(response.data.uuid);
                            $('#inspectionType').val(response.data.inspection_type_id).change();
                            $('#insp_customer_name').text(response.data.customers.name);
                            $('#insp_customer_phone').text(response.data.customers.mobile_number);
                            $('#insp_customer_time').text(new Date(response.data.insp_start_datetime)
                                .toLocaleTimeString([], {
                                    hour: '2-digit',
                                    minute: '2-digit',
                                    hour12: true // Change to 24-hour format
                                }) + ' - ' + new Date(response.data.insp_end_datetime)
                                .toLocaleTimeString([], {
                                    hour: '2-digit',
                                    minute: '2-digit',
                                    hour12: true // Change to 24-hour format
                                }));
                            $('#insp_customer_date').text(new Date(response.data.insp_start_datetime)
                                .toLocaleDateString());

                            let appointmentStatus = '';
                            switch (response.data.is_active) {
                                case 0:
                                    appointmentStatus = 'Pending';
                                    $('.appoyment-status').addClass('chip-pending').text(
                                        appointmentStatus);
                                    break;
                                case 1:
                                    appointmentStatus = 'Complete';
                                    $('.appoyment-status').addClass('chip-completed').text(
                                        appointmentStatus);
                                    break;
                                case 2:
                                    appointmentStatus = 'Cancelled';
                                    $('.appoyment-status').addClass('chip-cancelled').text(
                                        appointmentStatus);
                                    break;
                                case 3:
                                    appointmentStatus = 'Rescheduled';
                                    $('.appoyment-status').addClass('chip-reschedule').text(
                                        appointmentStatus);
                                    break;
                                default:
                                    appointmentStatus = 'Unknown Status';
                                    $('.appoyment-status').addClass('chip-unknown').text(
                                        appointmentStatus);
                            }
                            $('.inspection-complete').hide();
                            $('.inspection-complete-checkbox').hide();
                            $('#referral-remove').hide();
                            $('.re-schedule').hide();
                            $('.cancel_inspection').hide();
                        }
                    }
                },
                // whereDate(['insp_start_datetime' => $date])
                error: function(xhr) {
                    console.error("Error fetching customer details:", xhr);
                }
            });
        });
